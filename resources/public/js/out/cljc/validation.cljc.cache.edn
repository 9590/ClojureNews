;; Analyzed by ClojureScript 1.8.51
{:name cljc.validation, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {str clojure.string, clojure.string clojure.string}, :imports nil, :defs {submit-url? {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljc/validation.cljc", :line 52, :column 7, :end-line 52, :end-column 18, :arglists (quote ([url]))}, :name cljc.validation/submit-url?, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljc/validation.cljc", :end-column 18, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url]))}, submit-type? {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljc/validation.cljc", :line 43, :column 7, :end-line 43, :end-column 19, :arglists (quote ([type]))}, :name cljc.validation/submit-type?, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljc/validation.cljc", :end-column 19, :method-params ([type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([type]))}, submit-text? {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljc/validation.cljc", :line 58, :column 7, :end-line 58, :end-column 19, :arglists (quote ([text]))}, :name cljc.validation/submit-text?, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljc/validation.cljc", :end-column 19, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text]))}, email? {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljc/validation.cljc", :line 21, :column 7, :end-line 21, :end-column 13, :arglists (quote ([email]))}, :name cljc.validation/email?, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljc/validation.cljc", :end-column 13, :method-params ([email]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([email]))}, github-or-twitter? {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljc/validation.cljc", :line 26, :column 7, :end-line 26, :end-column 25, :arglists (quote ([username]))}, :name cljc.validation/github-or-twitter?, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljc/validation.cljc", :end-column 25, :method-params ([username]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([username]))}, show-email?? {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljc/validation.cljc", :line 39, :column 7, :end-line 39, :end-column 19, :arglists (quote ([show-email-option]))}, :name cljc.validation/show-email??, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljc/validation.cljc", :end-column 19, :method-params ([show-email-option]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([show-email-option]))}, about? {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljc/validation.cljc", :line 33, :column 7, :end-line 33, :end-column 13, :arglists (quote ([about]))}, :name cljc.validation/about?, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljc/validation.cljc", :end-column 13, :method-params ([about]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([about]))}, submit-title? {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljc/validation.cljc", :line 47, :column 7, :end-line 47, :end-column 20, :arglists (quote ([title]))}, :name cljc.validation/submit-title?, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljc/validation.cljc", :end-column 20, :method-params ([title]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([title]))}, url? {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljc/validation.cljc", :line 16, :column 7, :end-line 16, :end-column 11, :arglists (quote ([url]))}, :name cljc.validation/url?, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljc/validation.cljc", :end-column 11, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url]))}, password? {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljc/validation.cljc", :line 10, :column 7, :end-line 10, :end-column 16, :arglists (quote ([password])), :doc "Passwords should be between 8 and 20 characters long. Please choose another."}, :name cljc.validation/password?, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljc/validation.cljc", :end-column 16, :method-params ([password]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([password])), :doc "Passwords should be between 8 and 20 characters long. Please choose another."}, username? {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljc/validation.cljc", :line 4, :column 7, :end-line 4, :end-column 16, :arglists (quote ([username])), :doc "Usernames can only contain letters, digits and underscores, and should be between 2 and 15 characters long. Please choose another."}, :name cljc.validation/username?, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljc/validation.cljc", :end-column 16, :method-params ([username]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([username])), :doc "Usernames can only contain letters, digits and underscores, and should be between 2 and 15 characters long. Please choose another."}}}