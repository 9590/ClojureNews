;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name view.entry, :imports nil, :requires {cljs-time cljs-time.core, cljs-time.core cljs-time.core}, :uses nil, :defs {create-story {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry.cljs", :line 23, :column 7, :end-line 23, :end-column 19, :arglists (quote ([entry counter]))}, :name view.entry/create-story, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry.cljs", :end-column 19, :method-params ([entry counter]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([entry counter]))}, create-ask {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry.cljs", :line 55, :column 7, :end-line 55, :end-column 17, :arglists (quote ([entry counter]))}, :name view.entry/create-ask, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry.cljs", :end-column 17, :method-params ([entry counter]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 2, :fn-var true, :arglists (quote ([entry counter]))}, generate-comment-status {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry.cljs", :line 83, :column 7, :end-line 83, :end-column 30, :arglists (quote ([number-of-comments]))}, :name view.entry/generate-comment-status, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry.cljs", :end-column 30, :method-params ([number-of-comments]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 1, :fn-var true, :arglists (quote ([number-of-comments]))}, generate-upvote-status {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry.cljs", :line 90, :column 7, :end-line 90, :end-column 29, :arglists (quote ([number-of-upvotes]))}, :name view.entry/generate-upvote-status, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry.cljs", :end-column 29, :method-params ([number-of-upvotes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 1, :fn-var true, :arglists (quote ([number-of-upvotes]))}, generate-age-status {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry.cljs", :line 96, :column 7, :end-line 96, :end-column 26, :arglists (quote ([created-date]))}, :name view.entry/generate-age-status, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry.cljs", :end-column 26, :method-params ([created-date]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 1, :fn-var true, :arglists (quote ([created-date]))}, genereate-min-status {:name view.entry/genereate-min-status, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry.cljs", :line 4, :column 1, :end-line 9, :end-column 30, :declared true, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry.cljs", :line 9, :column 10, :end-line 9, :end-column 30, :declared true}}, component {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry.cljs", :line 11, :column 7, :end-line 11, :end-column 16, :arglists (quote ([entries]))}, :name view.entry/component, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry.cljs", :end-column 16, :method-params ([entries]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([entries]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:created-date :_id :tbody :table :text-align :vertical-align :else :pure-url :td :tr :cellSpacing :type :on-click :title :center :style :div :colSpan :created-by :number-of-comments :id :class :url :cellPadding :target :upvote :border :href :a :height :span}, :order [:table :class :border :cellPadding :cellSpacing :tbody :type :tr :td :style :vertical-align :text-align :span :center :a :id :on-click :div :title :href :target :url :pure-url :colSpan :upvote :created-by :_id :created-date :number-of-comments :height :else]}, :doc nil}