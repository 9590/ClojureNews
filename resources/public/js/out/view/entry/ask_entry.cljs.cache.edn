;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name view.entry.ask-entry, :imports nil, :requires {util.view util.view}, :uses nil, :defs {create-upvoted-comment {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry/ask_entry.cljs", :line 188, :column 7, :end-line 188, :end-column 29, :arglists (quote ([commentt]))}, :name view.entry.ask-entry/create-upvoted-comment, :variadic false, :file "src/cljs/view/entry/ask_entry.cljs", :end-column 29, :method-params ([commentt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 188, :end-line 188, :max-fixed-arity 1, :fn-var true, :arglists (quote ([commentt]))}, create-comment {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry/ask_entry.cljs", :line 153, :column 7, :end-line 153, :end-column 21, :arglists (quote ([commentt]))}, :name view.entry.ask-entry/create-comment, :variadic false, :file "src/cljs/view/entry/ask_entry.cljs", :end-column 21, :method-params ([commentt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 1, :fn-var true, :arglists (quote ([commentt]))}, ask-owner? {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry/ask_entry.cljs", :line 112, :column 7, :end-line 112, :end-column 17, :arglists (quote ([data]))}, :name view.entry.ask-entry/ask-owner?, :variadic false, :file "src/cljs/view/entry/ask_entry.cljs", :end-column 17, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, genereate-min-status {:name view.entry.ask-entry/genereate-min-status, :file "src/cljs/view/entry/ask_entry.cljs", :line 4, :column 1, :end-line 7, :end-column 30, :declared true, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry/ask_entry.cljs", :line 7, :column 10, :end-line 7, :end-column 30, :declared true}}, create-comment-owner {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry/ask_entry.cljs", :line 120, :column 7, :end-line 120, :end-column 27, :arglists (quote ([commentt]))}, :name view.entry.ask-entry/create-comment-owner, :variadic false, :file "src/cljs/view/entry/ask_entry.cljs", :end-column 27, :method-params ([commentt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 120, :end-line 120, :max-fixed-arity 1, :fn-var true, :arglists (quote ([commentt]))}, component-delete {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry/ask_entry.cljs", :line 286, :column 7, :end-line 286, :end-column 23, :arglists (quote ([ask]))}, :name view.entry.ask-entry/component-delete, :variadic false, :file "src/cljs/view/entry/ask_entry.cljs", :end-column 23, :method-params ([ask]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 286, :end-line 286, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ask]))}, generate-comment-status {:name view.entry.ask-entry/generate-comment-status, :file "src/cljs/view/entry/ask_entry.cljs", :line 4, :column 1, :end-line 4, :end-column 33, :declared true, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry/ask_entry.cljs", :line 4, :column 10, :end-line 4, :end-column 33, :declared true}}, generate-age-status {:name view.entry.ask-entry/generate-age-status, :file "src/cljs/view/entry/ask_entry.cljs", :line 4, :column 1, :end-line 6, :end-column 29, :declared true, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry/ask_entry.cljs", :line 6, :column 10, :end-line 6, :end-column 29, :declared true}}, comment-owner? {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry/ask_entry.cljs", :line 116, :column 7, :end-line 116, :end-column 21, :arglists (quote ([data comment-created-by]))}, :name view.entry.ask-entry/comment-owner?, :variadic false, :file "src/cljs/view/entry/ask_entry.cljs", :end-column 21, :method-params ([data comment-created-by]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data comment-created-by]))}, component-edit {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry/ask_entry.cljs", :line 221, :column 7, :end-line 221, :end-column 21, :arglists (quote ([ask]))}, :name view.entry.ask-entry/component-edit, :variadic false, :file "src/cljs/view/entry/ask_entry.cljs", :end-column 21, :method-params ([ask]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 221, :end-line 221, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ask]))}, component-ask {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry/ask_entry.cljs", :line 14, :column 7, :end-line 14, :end-column 20, :arglists (quote ([ask]))}, :name view.entry.ask-entry/component-ask, :variadic false, :file "src/cljs/view/entry/ask_entry.cljs", :end-column 20, :method-params ([ask]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ask]))}, generate-upvote-status {:name view.entry.ask-entry/generate-upvote-status, :file "src/cljs/view/entry/ask_entry.cljs", :line 4, :column 1, :end-line 5, :end-column 32, :declared true, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry/ask_entry.cljs", :line 5, :column 10, :end-line 5, :end-column 32, :declared true}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:created-date :_id :user-obj :wrap :tbody :table :color :text-align :vertical-align :index :tabindex :else :button :ask-upvoted-comments :content :name :td :tr :username :margin-top :owner? :width :type :src :upvoted? :font :size :title :center :style :textarea :ask-entry :rows :div :cols :colSpan :created-by :number-of-comments :str-id :id :class :url :ask-comments :br :input :upvote :defaultValue :border :p :margin-bottom :visibility :href :img :a :height :visiblity :text :span :u}, :order [:div :table :border :tbody :tr :class :td :text-align :vertical-align :span :center :font :color :br :img :src :height :width :upvoted? :a :style :visibility :title :else :id :_id :ask-entry :visiblity :href :url :colSpan :upvote :created-by :created-date :number-of-comments :text :textarea :name :cols :rows :button :ask-upvoted-comments :ask-comments :username :user-obj :index :margin-top :margin-bottom :content :p :size :u :str-id :owner? :input :type :defaultValue :wrap :tabindex]}, :doc nil}