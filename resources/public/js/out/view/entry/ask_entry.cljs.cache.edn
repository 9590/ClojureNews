;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name view.entry.ask-entry, :imports nil, :requires {util.view util.view}, :uses nil, :defs {create-upvoted-comment {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry/ask_entry.cljs", :line 175, :column 7, :end-line 175, :end-column 29, :arglists (quote ([commentt]))}, :name view.entry.ask-entry/create-upvoted-comment, :variadic false, :file "src/cljs/view/entry/ask_entry.cljs", :end-column 29, :method-params ([commentt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 175, :end-line 175, :max-fixed-arity 1, :fn-var true, :arglists (quote ([commentt]))}, create-comment {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry/ask_entry.cljs", :line 140, :column 7, :end-line 140, :end-column 21, :arglists (quote ([commentt]))}, :name view.entry.ask-entry/create-comment, :variadic false, :file "src/cljs/view/entry/ask_entry.cljs", :end-column 21, :method-params ([commentt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 140, :end-line 140, :max-fixed-arity 1, :fn-var true, :arglists (quote ([commentt]))}, ask-owner? {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry/ask_entry.cljs", :line 99, :column 7, :end-line 99, :end-column 17, :arglists (quote ([data]))}, :name view.entry.ask-entry/ask-owner?, :variadic false, :file "src/cljs/view/entry/ask_entry.cljs", :end-column 17, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, genereate-min-status {:name view.entry.ask-entry/genereate-min-status, :file "src/cljs/view/entry/ask_entry.cljs", :line 4, :column 1, :end-line 7, :end-column 30, :declared true, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry/ask_entry.cljs", :line 7, :column 10, :end-line 7, :end-column 30, :declared true}}, create-comment-owner {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry/ask_entry.cljs", :line 107, :column 7, :end-line 107, :end-column 27, :arglists (quote ([commentt]))}, :name view.entry.ask-entry/create-comment-owner, :variadic false, :file "src/cljs/view/entry/ask_entry.cljs", :end-column 27, :method-params ([commentt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 1, :fn-var true, :arglists (quote ([commentt]))}, component-delete {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry/ask_entry.cljs", :line 273, :column 7, :end-line 273, :end-column 23, :arglists (quote ([ask]))}, :name view.entry.ask-entry/component-delete, :variadic false, :file "src/cljs/view/entry/ask_entry.cljs", :end-column 23, :method-params ([ask]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 273, :end-line 273, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ask]))}, generate-comment-status {:name view.entry.ask-entry/generate-comment-status, :file "src/cljs/view/entry/ask_entry.cljs", :line 4, :column 1, :end-line 4, :end-column 33, :declared true, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry/ask_entry.cljs", :line 4, :column 10, :end-line 4, :end-column 33, :declared true}}, generate-age-status {:name view.entry.ask-entry/generate-age-status, :file "src/cljs/view/entry/ask_entry.cljs", :line 4, :column 1, :end-line 6, :end-column 29, :declared true, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry/ask_entry.cljs", :line 6, :column 10, :end-line 6, :end-column 29, :declared true}}, comment-owner? {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry/ask_entry.cljs", :line 103, :column 7, :end-line 103, :end-column 21, :arglists (quote ([data comment-created-by]))}, :name view.entry.ask-entry/comment-owner?, :variadic false, :file "src/cljs/view/entry/ask_entry.cljs", :end-column 21, :method-params ([data comment-created-by]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data comment-created-by]))}, component-edit {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry/ask_entry.cljs", :line 208, :column 7, :end-line 208, :end-column 21, :arglists (quote ([ask]))}, :name view.entry.ask-entry/component-edit, :variadic false, :file "src/cljs/view/entry/ask_entry.cljs", :end-column 21, :method-params ([ask]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 208, :end-line 208, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ask]))}, component-ask {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry/ask_entry.cljs", :line 14, :column 7, :end-line 14, :end-column 20, :arglists (quote ([ask]))}, :name view.entry.ask-entry/component-ask, :variadic false, :file "src/cljs/view/entry/ask_entry.cljs", :end-column 20, :method-params ([ask]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ask]))}, generate-upvote-status {:name view.entry.ask-entry/generate-upvote-status, :file "src/cljs/view/entry/ask_entry.cljs", :line 4, :column 1, :end-line 5, :end-column 32, :declared true, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/view/entry/ask_entry.cljs", :line 5, :column 10, :end-line 5, :end-column 32, :declared true}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:created-date :_id :user-obj :wrap :tbody :table :color :text-align :vertical-align :index :tabindex :else :button :ask-upvoted-comments :content :name :td :tr :username :margin-top :owner? :width :type :src :font :size :title :center :style :textarea :ask-entry :rows :div :cols :colSpan :created-by :number-of-comments :str-id :id :class :url :ask-comments :br :input :upvote :defaultValue :border :p :margin-bottom :visibility :href :img :a :height :visiblity :text :span :u}, :order [:div :table :border :tbody :tr :class :td :text-align :vertical-align :span :center :font :color :a :id :href :title :url :ask-entry :colSpan :upvote :created-by :_id :created-date :number-of-comments :style :height :text :textarea :name :cols :rows :br :button :ask-upvoted-comments :else :ask-comments :username :user-obj :img :src :width :index :margin-top :margin-bottom :content :visiblity :p :size :u :str-id :visibility :owner? :input :type :defaultValue :wrap :tabindex]}, :doc nil}