;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name render.error, :imports nil, :requires {r reagent.core, reagent.core reagent.core, secretary.core secretary.core, view.login view.login, util.view util.view}, :uses nil, :defs {error {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/render/error.cljs", :line 7, :column 7, :end-line 7, :end-column 12, :arglists (quote ([message]))}, :name render.error/error, :variadic false, :file "src/cljs/render/error.cljs", :end-column 12, :method-params ([message]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([message]))}}, :require-macros {r reagent.core, reagent.core reagent.core, secretary.core secretary.core}, :cljs.analyzer/constants {:seen #{:p}, :order [:p]}, :doc nil}