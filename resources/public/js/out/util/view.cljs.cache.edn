;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name util.view, :imports nil, :requires {validation cljc.validation, goog.dom goog.dom, dom goog.dom, reagent.core reagent.core, r reagent.core, cljs-time cljs-time.core, cljs-time.core cljs-time.core, cljc.validation cljc.validation, view.user view.user, str clojure.string, clojure.string clojure.string}, :uses nil, :defs {main-container {:name util.view/main-container, :file "src/cljs/util/view.cljs", :line 9, :column 1, :end-line 9, :end-column 24, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 9, :column 10, :end-line 9, :end-column 24}}, create-field-val-map {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 13, :column 7, :end-line 13, :end-column 27, :arglists (quote ([field-ids]))}, :name util.view/create-field-val-map, :variadic false, :file "src/cljs/util/view.cljs", :end-column 27, :method-params ([field-ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([field-ids]))}, create-code-token {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 39, :column 7, :end-line 39, :end-column 24, :arglists (quote ([line]))}, :name util.view/create-code-token, :variadic false, :file "src/cljs/util/view.cljs", :end-column 24, :method-params ([line]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([line]))}, render-error-message {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 17, :column 7, :end-line 17, :end-column 27, :arglists (quote ([message]))}, :name util.view/render-error-message, :variadic false, :file "src/cljs/util/view.cljs", :end-column 27, :method-params ([message]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([message]))}, change-url {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 27, :column 7, :end-line 27, :end-column 17, :arglists (quote ([path]))}, :name util.view/change-url, :variadic false, :file "src/cljs/util/view.cljs", :end-column 17, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path]))}, split-into-lines {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 53, :column 7, :end-line 53, :end-column 23, :arglists (quote ([paragraph]))}, :name util.view/split-into-lines, :variadic false, :file "src/cljs/util/view.cljs", :end-column 23, :method-params ([paragraph]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([paragraph]))}, generate-comment-status {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 83, :column 7, :end-line 83, :end-column 30, :arglists (quote ([number-of-comments]))}, :name util.view/generate-comment-status, :variadic false, :file "src/cljs/util/view.cljs", :end-column 30, :method-params ([number-of-comments]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 1, :fn-var true, :arglists (quote ([number-of-comments]))}, in? {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 31, :column 7, :end-line 31, :end-column 10, :arglists (quote ([element coll]))}, :name util.view/in?, :variadic false, :file "src/cljs/util/view.cljs", :end-column 10, :method-params ([element coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists (quote ([element coll]))}, generate-age-status {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 96, :column 7, :end-line 96, :end-column 26, :arglists (quote ([created-date]))}, :name util.view/generate-age-status, :variadic false, :file "src/cljs/util/view.cljs", :end-column 26, :method-params ([created-date]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 1, :fn-var true, :arglists (quote ([created-date]))}, scroll-to-top {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 79, :column 7, :end-line 79, :end-column 20, :arglists (quote ([]))}, :name util.view/scroll-to-top, :variadic false, :file "src/cljs/util/view.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-italic-token {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 35, :column 7, :end-line 35, :end-column 23, :arglists (quote ([token]))}, :name util.view/get-italic-token, :variadic false, :file "src/cljs/util/view.cljs", :end-column 23, :method-params ([token]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([token]))}, group-code-tokens {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 60, :column 7, :end-line 60, :end-column 24, :arglists (quote ([lines]))}, :name util.view/group-code-tokens, :variadic false, :file "src/cljs/util/view.cljs", :end-column 24, :method-params ([lines]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists (quote ([lines]))}, render-update-successfully {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 21, :column 7, :end-line 21, :end-column 33, :arglists (quote ([]))}, :name util.view/render-update-successfully, :variadic false, :file "src/cljs/util/view.cljs", :end-column 33, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, create-tokens {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 43, :column 7, :end-line 43, :end-column 20, :arglists (quote ([line]))}, :name util.view/create-tokens, :variadic false, :file "src/cljs/util/view.cljs", :end-column 20, :method-params ([line]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([line]))}, generate-upvote-status {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 90, :column 7, :end-line 90, :end-column 29, :arglists (quote ([number-of-upvotes]))}, :name util.view/generate-upvote-status, :variadic false, :file "src/cljs/util/view.cljs", :end-column 29, :method-params ([number-of-upvotes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 1, :fn-var true, :arglists (quote ([number-of-upvotes]))}, parse-comment {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 75, :column 7, :end-line 75, :end-column 20, :arglists (quote ([commentt]))}, :name util.view/parse-comment, :variadic false, :file "src/cljs/util/view.cljs", :end-column 20, :method-params ([commentt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 1, :fn-var true, :arglists (quote ([commentt]))}, message-container {:name util.view/message-container, :file "src/cljs/util/view.cljs", :line 11, :column 1, :end-line 11, :end-column 27, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 11, :column 10, :end-line 11, :end-column 27}}, split-into-paragraphs {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 68, :column 7, :end-line 68, :end-column 28, :arglists (quote ([commentt]))}, :name util.view/split-into-paragraphs, :variadic false, :file "src/cljs/util/view.cljs", :end-column 28, :method-params ([commentt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([commentt]))}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:color :pre :else :style :code :br :target :p :i :href :a :u}, :order [:p :style :color :code :a :href :target :u :i :else :pre :br]}, :doc nil}