;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name util.view, :imports nil, :requires {validation cljc.validation, goog.dom goog.dom, dom goog.dom, reagent.core reagent.core, r reagent.core, cljs-time cljs-time.core, cljs-time.core cljs-time.core, cljc.validation cljc.validation, view.user view.user, str clojure.string, clojure.string clojure.string}, :uses nil, :defs {main-container {:name util.view/main-container, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 9, :column 1, :end-line 9, :end-column 24, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 9, :column 10, :end-line 9, :end-column 24}}, create-field-val-map {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 13, :column 7, :end-line 13, :end-column 27, :arglists (quote ([field-ids]))}, :name util.view/create-field-val-map, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 27, :method-params ([field-ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([field-ids]))}, change-url-to-events {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 43, :column 7, :end-line 43, :end-column 27, :arglists (quote ([]))}, :name util.view/change-url-to-events, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, select-header-button {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 152, :column 7, :end-line 152, :end-column 27, :arglists (quote ([token]))}, :name util.view/select-header-button, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 27, :method-params ([token]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 1, :fn-var true, :arglists (quote ([token]))}, create-code-token {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 55, :column 7, :end-line 55, :end-column 24, :arglists (quote ([line]))}, :name util.view/create-code-token, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 24, :method-params ([line]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([line]))}, render-error-message {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 17, :column 7, :end-line 17, :end-column 27, :arglists (quote ([message]))}, :name util.view/render-error-message, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 27, :method-params ([message]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([message]))}, change-url {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 27, :column 7, :end-line 27, :end-column 17, :arglists (quote ([path]))}, :name util.view/change-url, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 17, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path]))}, change-page-title {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 165, :column 7, :end-line 165, :end-column 24, :arglists (quote ([title]))}, :name util.view/change-page-title, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 24, :method-params ([title]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 165, :end-line 165, :max-fixed-arity 1, :fn-var true, :arglists (quote ([title]))}, split-into-lines {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 69, :column 7, :end-line 69, :end-column 23, :arglists (quote ([paragraph]))}, :name util.view/split-into-lines, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 23, :method-params ([paragraph]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([paragraph]))}, change-color-to-blue {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 146, :column 7, :end-line 146, :end-column 27, :arglists (quote ([element-id]))}, :name util.view/change-color-to-blue, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 27, :method-params ([element-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 1, :fn-var true, :arglists (quote ([element-id]))}, change-url-to-jobs {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 39, :column 7, :end-line 39, :end-column 25, :arglists (quote ([]))}, :name util.view/change-url-to-jobs, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, generate-comment-status {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 99, :column 7, :end-line 99, :end-column 30, :arglists (quote ([number-of-comments]))}, :name util.view/generate-comment-status, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 30, :method-params ([number-of-comments]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 1, :fn-var true, :arglists (quote ([number-of-comments]))}, get-day-of-date {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 129, :column 7, :end-line 129, :end-column 22, :arglists (quote ([day]))}, :name util.view/get-day-of-date, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 22, :method-params ([day]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 129, :end-line 129, :max-fixed-arity 1, :fn-var true, :arglists (quote ([day]))}, in? {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 47, :column 7, :end-line 47, :end-column 10, :arglists (quote ([element coll]))}, :name util.view/in?, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 10, :method-params ([element coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([element coll]))}, generate-age-status {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 112, :column 7, :end-line 112, :end-column 26, :arglists (quote ([created-date]))}, :name util.view/generate-age-status, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 26, :method-params ([created-date]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 1, :fn-var true, :arglists (quote ([created-date]))}, change-color-to-default {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 141, :column 7, :end-line 141, :end-column 30, :arglists (quote ([]))}, :name util.view/change-color-to-default, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 30, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, scroll-to-top {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 95, :column 7, :end-line 95, :end-column 20, :arglists (quote ([]))}, :name util.view/scroll-to-top, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-year-of-date {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 137, :column 7, :end-line 137, :end-column 23, :arglists (quote ([year]))}, :name util.view/get-year-of-date, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 23, :method-params ([year]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 137, :end-line 137, :max-fixed-arity 1, :fn-var true, :arglists (quote ([year]))}, change-header-links-page-titles {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 169, :column 7, :end-line 169, :end-column 38, :arglists (quote ([token]))}, :name util.view/change-header-links-page-titles, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 38, :method-params ([token]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 1, :fn-var true, :arglists (quote ([token]))}, change-url-to-ask {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 35, :column 7, :end-line 35, :end-column 24, :arglists (quote ([]))}, :name util.view/change-url-to-ask, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, parse-date {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 125, :column 8, :end-line 125, :end-column 18, :private true, :arglists (quote ([date]))}, :private true, :name util.view/parse-date, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 18, :method-params ([date]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 125, :end-line 125, :max-fixed-arity 1, :fn-var true, :arglists (quote ([date]))}, get-italic-token {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 51, :column 7, :end-line 51, :end-column 23, :arglists (quote ([token]))}, :name util.view/get-italic-token, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 23, :method-params ([token]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([token]))}, group-code-tokens {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 76, :column 7, :end-line 76, :end-column 24, :arglists (quote ([lines]))}, :name util.view/group-code-tokens, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 24, :method-params ([lines]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists (quote ([lines]))}, render-update-successfully {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 21, :column 7, :end-line 21, :end-column 33, :arglists (quote ([]))}, :name util.view/render-update-successfully, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 33, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, create-tokens {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 59, :column 7, :end-line 59, :end-column 20, :arglists (quote ([line]))}, :name util.view/create-tokens, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 20, :method-params ([line]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([line]))}, generate-upvote-status {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 106, :column 7, :end-line 106, :end-column 29, :arglists (quote ([number-of-upvotes]))}, :name util.view/generate-upvote-status, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 29, :method-params ([number-of-upvotes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 106, :end-line 106, :max-fixed-arity 1, :fn-var true, :arglists (quote ([number-of-upvotes]))}, get-month-of-date {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 133, :column 7, :end-line 133, :end-column 24, :arglists (quote ([month]))}, :name util.view/get-month-of-date, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 24, :method-params ([month]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 133, :end-line 133, :max-fixed-arity 1, :fn-var true, :arglists (quote ([month]))}, parse-comment {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 91, :column 7, :end-line 91, :end-column 20, :arglists (quote ([commentt]))}, :name util.view/parse-comment, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 20, :method-params ([commentt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 1, :fn-var true, :arglists (quote ([commentt]))}, message-container {:name util.view/message-container, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 11, :column 1, :end-line 11, :end-column 27, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 11, :column 10, :end-line 11, :end-column 27}}, change-url-to-story {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 31, :column 7, :end-line 31, :end-column 26, :arglists (quote ([]))}, :name util.view/change-url-to-story, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, split-into-paragraphs {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :line 84, :column 7, :end-line 84, :end-column 28, :arglists (quote ([commentt]))}, :name util.view/split-into-paragraphs, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/util/view.cljs", :end-column 28, :method-params ([commentt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 1, :fn-var true, :arglists (quote ([commentt]))}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:color :pre :else :style :code :br :target :p :i :href :a :u}, :order [:p :style :color :code :a :href :target :u :i :else :pre :br]}, :doc nil}