;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name controller.submit, :imports nil, :requires {ajax ajax.core, ajax.core ajax.core, validation cljc.validation, cljc.validation cljc.validation, r reagent.core, reagent.core reagent.core, util.view util.view, util.controller util.controller, view.submit view.submit}, :uses {PUT ajax.core, POST ajax.core, GET ajax.core}, :defs {submit {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/submit.cljs", :line 22, :column 7, :end-line 22, :end-column 13, :arglists (quote ([field-ids]))}, :name controller.submit/submit, :variadic false, :file "src/cljs/controller/submit.cljs", :end-column 13, :method-params ([field-ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([field-ids]))}, create-story {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/submit.cljs", :line 31, :column 7, :end-line 31, :end-column 19, :arglists (quote ([data]))}, :name controller.submit/create-story, :variadic false, :file "src/cljs/controller/submit.cljs", :end-column 19, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, entry-map {:name controller.submit/entry-map, :file "src/cljs/controller/submit.cljs", :line 12, :column 1, :end-line 12, :end-column 19, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/submit.cljs", :line 12, :column 10, :end-line 12, :end-column 19}}, submit-page {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/submit.cljs", :line 17, :column 7, :end-line 17, :end-column 18, :arglists (quote ([]))}, :name controller.submit/submit-page, :variadic false, :file "src/cljs/controller/submit.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:format :keywords? :else :events :response-format :params :type :title :jobs :error-handler :story :url :handler :ask}, :order [:story :ask :jobs :events :type :title :url :else :params :handler :error-handler :format :response-format :keywords?]}, :doc nil}