;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name controller.entry, :imports nil, :requires {validation cljc.validation, ajax.core ajax.core, reagent.core reagent.core, r reagent.core, util.controller util.controller, view.entry view.entry, ajax ajax.core, cljc.validation cljc.validation, util.view util.view, str clojure.string, clojure.string clojure.string}, :uses {PUT ajax.core, POST ajax.core, GET ajax.core}, :defs {add-story-comment {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 37, :column 7, :end-line 37, :end-column 24, :arglists (quote ([story-id field-ids]))}, :name controller.entry/add-story-comment, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 24, :method-params ([story-id field-ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists (quote ([story-id field-ids]))}, story {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 23, :column 7, :end-line 23, :end-column 12, :arglists (quote ([id]))}, :name controller.entry/story, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 12, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, home-page {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 13, :column 7, :end-line 13, :end-column 16, :arglists (quote ([]))}, :name controller.entry/home-page, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ask {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 33, :column 7, :end-line 33, :end-column 10, :arglists (quote ([id]))}, :name controller.entry/ask, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 10, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:format :story-id :keywords? :else :response-format :params :error-handler :handler :text}, :order [:handler :error-handler :format :response-format :keywords? :text :else :params :story-id]}, :doc nil}