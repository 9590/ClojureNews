;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name controller.entry, :imports nil, :requires {error-message cljc.error-messages, validation cljc.validation, goog.dom goog.dom, view.entry.story-entry view.entry.story-entry, ajax.core ajax.core, dom goog.dom, view.entry.ask-entry view.entry.ask-entry, reagent.core reagent.core, r reagent.core, cljc.error-messages cljc.error-messages, view.list.job view.list.job, view.entry.job view.entry.job, util.controller util.controller, ajax ajax.core, cljc.validation cljc.validation, util.view util.view, view.list.story view.list.story, controller.upvote controller.upvote, controller.comment-entry controller.comment-entry, view.list.ask view.list.ask}, :uses {PUT ajax.core, POST ajax.core, DELETE ajax.core, GET ajax.core}, :defs {add-event-listener-to-ask-button-yes {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 304, :column 7, :end-line 304, :end-column 43, :arglists (quote ([id]))}, :name controller.entry/add-event-listener-to-ask-button-yes, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 43, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 304, :end-line 304, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, edit-story {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 65, :column 7, :end-line 65, :end-column 17, :arglists (quote ([id field-ids]))}, :name controller.entry/edit-story, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 17, :method-params ([id field-ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id field-ids]))}, delete-ask {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 171, :column 7, :end-line 171, :end-column 17, :arglists (quote ([id]))}, :name controller.entry/delete-ask, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 17, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 171, :end-line 171, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, dont-delete-story {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 254, :column 7, :end-line 254, :end-column 24, :arglists (quote ([]))}, :name controller.entry/dont-delete-story, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 254, :end-line 254, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, delete-ask-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 159, :column 7, :end-line 159, :end-column 23, :arglists (quote ([id]))}, :name controller.entry/delete-ask-by-id, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 23, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 159, :end-line 159, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, add-event-listener-to-story-button-yes {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 294, :column 7, :end-line 294, :end-column 45, :arglists (quote ([id]))}, :name controller.entry/add-event-listener-to-story-button-yes, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 45, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 294, :end-line 294, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, dont-delete-ask {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 258, :column 7, :end-line 258, :end-column 22, :arglists (quote ([]))}, :name controller.entry/dont-delete-ask, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 258, :end-line 258, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-jobs-by-page {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 180, :column 7, :end-line 180, :end-column 23, :arglists (quote ([page]))}, :name controller.entry/get-jobs-by-page, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 23, :method-params ([page]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 180, :end-line 180, :max-fixed-arity 1, :fn-var true, :arglists (quote ([page]))}, edit-ask-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 126, :column 7, :end-line 126, :end-column 21, :arglists (quote ([id]))}, :name controller.entry/edit-ask-by-id, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 21, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 126, :end-line 126, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, dont-delete-job {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 262, :column 7, :end-line 262, :end-column 22, :arglists (quote ([]))}, :name controller.entry/dont-delete-job, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 262, :end-line 262, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-event-listener-to-edit-ask-button {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 289, :column 7, :end-line 289, :end-column 44, :arglists (quote ([id]))}, :name controller.entry/add-event-listener-to-edit-ask-button, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 44, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 289, :end-line 289, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, add-event-listener-to-delete-job-button-yes {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 319, :column 7, :end-line 319, :end-column 50, :arglists (quote ([id]))}, :name controller.entry/add-event-listener-to-delete-job-button-yes, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 50, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 319, :end-line 319, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, delete-job {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 245, :column 7, :end-line 245, :end-column 17, :arglists (quote ([id]))}, :name controller.entry/delete-job, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 17, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 245, :end-line 245, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, delete-story-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 83, :column 7, :end-line 83, :end-column 25, :arglists (quote ([id]))}, :name controller.entry/delete-story-by-id, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 25, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, add-event-listener-to-story-button-no {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 299, :column 7, :end-line 299, :end-column 44, :arglists (quote ([]))}, :name controller.entry/add-event-listener-to-story-button-no, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 44, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 299, :end-line 299, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, delete-story {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 95, :column 7, :end-line 95, :end-column 19, :arglists (quote ([id]))}, :name controller.entry/delete-story, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 19, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, get-story-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 40, :column 7, :end-line 40, :end-column 22, :arglists (quote ([id]))}, :name controller.entry/get-story-by-id, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 22, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, get-ask-by-page {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 116, :column 7, :end-line 116, :end-column 22, :arglists (quote ([page]))}, :name controller.entry/get-ask-by-page, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 22, :method-params ([page]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 1, :fn-var true, :arglists (quote ([page]))}, edit-story-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 54, :column 7, :end-line 54, :end-column 23, :arglists (quote ([id]))}, :name controller.entry/edit-story-by-id, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 23, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, delete-job-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 232, :column 7, :end-line 232, :end-column 23, :arglists (quote ([id]))}, :name controller.entry/delete-job-by-id, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 23, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 232, :end-line 232, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, get-ask-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 104, :column 7, :end-line 104, :end-column 20, :arglists (quote ([id]))}, :name controller.entry/get-ask-by-id, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 20, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, add-event-listener-to-ask-button-no {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 309, :column 7, :end-line 309, :end-column 42, :arglists (quote ([]))}, :name controller.entry/add-event-listener-to-ask-button-no, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 42, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 309, :end-line 309, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-stories-by-page {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 30, :column 7, :end-line 30, :end-column 26, :arglists (quote ([page]))}, :name controller.entry/get-stories-by-page, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 26, :method-params ([page]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([page]))}, add-event-listener-to-upvote-buttons {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 270, :column 7, :end-line 270, :end-column 43, :arglists (quote ([response type]))}, :name controller.entry/add-event-listener-to-upvote-buttons, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 43, :method-params ([response type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 270, :end-line 270, :max-fixed-arity 2, :fn-var true, :arglists (quote ([response type]))}, edit-job-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 190, :column 7, :end-line 190, :end-column 21, :arglists (quote ([id]))}, :name controller.entry/edit-job-by-id, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 21, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 190, :end-line 190, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, add-event-listener-to-add-comment-button {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 266, :column 7, :end-line 266, :end-column 47, :arglists (quote ([entry id]))}, :name controller.entry/add-event-listener-to-add-comment-button, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 47, :method-params ([entry id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 266, :end-line 266, :max-fixed-arity 2, :fn-var true, :arglists (quote ([entry id]))}, add-event-listener-to-edit-job-button {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 314, :column 7, :end-line 314, :end-column 44, :arglists (quote ([id]))}, :name controller.entry/add-event-listener-to-edit-job-button, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 44, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 314, :end-line 314, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, edit-ask {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 137, :column 7, :end-line 137, :end-column 15, :arglists (quote ([id field-ids]))}, :name controller.entry/edit-ask, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 15, :method-params ([id field-ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 137, :end-line 137, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id field-ids]))}, add-event-listener-to-edit-story-button {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 284, :column 7, :end-line 284, :end-column 46, :arglists (quote ([id]))}, :name controller.entry/add-event-listener-to-edit-story-button, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 46, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 284, :end-line 284, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, edit-job {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 201, :column 7, :end-line 201, :end-column 15, :arglists (quote ([id field-ids]))}, :name controller.entry/edit-job, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 15, :method-params ([id field-ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 201, :end-line 201, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id field-ids]))}, add-event-listener-to-delete-job-button-no {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 324, :column 7, :end-line 324, :end-column 49, :arglists (quote ([]))}, :name controller.entry/add-event-listener-to-delete-job-button-no, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 49, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 324, :end-line 324, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:_id :format :keywords? :else :ask-upvoted-comments :story-upvoted-comments :story-comments :city :response-format :params :title :error-handler :story :url :ask-comments :remote? :handler :country :ask :text}, :order [:handler :error-handler :format :response-format :keywords? :story :title :else :params :ask :text :url :country :city :remote? :story-comments :ask-comments :story-upvoted-comments :ask-upvoted-comments :_id]}, :doc nil}