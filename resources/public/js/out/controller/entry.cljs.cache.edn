;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name controller.entry, :imports nil, :requires {error-message cljc.error-messages, validation cljc.validation, goog.dom goog.dom, view.entry.story-entry view.entry.story-entry, ajax.core ajax.core, dom goog.dom, view.entry.ask-entry view.entry.ask-entry, view.list.newest view.list.newest, reagent.core reagent.core, r reagent.core, cljc.error-messages cljc.error-messages, view.list.job view.list.job, view.entry.job view.entry.job, view.list.event view.list.event, util.controller util.controller, ajax ajax.core, cljc.validation cljc.validation, util.view util.view, view.list.story view.list.story, controller.upvote controller.upvote, controller.comment-entry controller.comment-entry, view.list.ask view.list.ask}, :uses {PUT ajax.core, POST ajax.core, DELETE ajax.core, GET ajax.core}, :defs {add-event-listener-to-ask-button-yes {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 359, :column 7, :end-line 359, :end-column 43, :arglists (quote ([id]))}, :name controller.entry/add-event-listener-to-ask-button-yes, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 43, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 359, :end-line 359, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, edit-story {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 69, :column 7, :end-line 69, :end-column 17, :arglists (quote ([id field-ids]))}, :name controller.entry/edit-story, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 17, :method-params ([id field-ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id field-ids]))}, delete-ask {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 176, :column 7, :end-line 176, :end-column 17, :arglists (quote ([id]))}, :name controller.entry/delete-ask, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 17, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, dont-delete-story {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 281, :column 7, :end-line 281, :end-column 24, :arglists (quote ([]))}, :name controller.entry/dont-delete-story, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 281, :end-line 281, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, delete-ask-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 164, :column 7, :end-line 164, :end-column 23, :arglists (quote ([id]))}, :name controller.entry/delete-ask-by-id, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 23, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 164, :end-line 164, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, add-event-listener-to-story-button-yes {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 349, :column 7, :end-line 349, :end-column 45, :arglists (quote ([id]))}, :name controller.entry/add-event-listener-to-story-button-yes, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 45, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 349, :end-line 349, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, dont-delete-ask {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 285, :column 7, :end-line 285, :end-column 22, :arglists (quote ([]))}, :name controller.entry/dont-delete-ask, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 285, :end-line 285, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-event-listener-to-upvote-buttons-for-newest-entries {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 325, :column 7, :end-line 325, :end-column 62, :arglists (quote ([response]))}, :name controller.entry/add-event-listener-to-upvote-buttons-for-newest-entries, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 62, :method-params ([response]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 325, :end-line 325, :max-fixed-arity 1, :fn-var true, :arglists (quote ([response]))}, get-jobs-by-page {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 196, :column 7, :end-line 196, :end-column 23, :arglists (quote ([page]))}, :name controller.entry/get-jobs-by-page, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 23, :method-params ([page]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 196, :end-line 196, :max-fixed-arity 1, :fn-var true, :arglists (quote ([page]))}, edit-ask-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 131, :column 7, :end-line 131, :end-column 21, :arglists (quote ([id]))}, :name controller.entry/edit-ask-by-id, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 21, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, dont-delete-job {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 289, :column 7, :end-line 289, :end-column 22, :arglists (quote ([]))}, :name controller.entry/dont-delete-job, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 289, :end-line 289, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-event-listener-to-edit-ask-button {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 344, :column 7, :end-line 344, :end-column 44, :arglists (quote ([id]))}, :name controller.entry/add-event-listener-to-edit-ask-button, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 44, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 344, :end-line 344, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, add-event-listener-to-delete-job-button-yes {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 374, :column 7, :end-line 374, :end-column 50, :arglists (quote ([id]))}, :name controller.entry/add-event-listener-to-delete-job-button-yes, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 50, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 374, :end-line 374, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, delete-job {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 261, :column 7, :end-line 261, :end-column 17, :arglists (quote ([id]))}, :name controller.entry/delete-job, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 17, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 261, :end-line 261, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, delete-story-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 87, :column 7, :end-line 87, :end-column 25, :arglists (quote ([id]))}, :name controller.entry/delete-story-by-id, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 25, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, add-event-listener-to-story-button-no {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 354, :column 7, :end-line 354, :end-column 44, :arglists (quote ([]))}, :name controller.entry/add-event-listener-to-story-button-no, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 44, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 354, :end-line 354, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, delete-story {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 99, :column 7, :end-line 99, :end-column 19, :arglists (quote ([id]))}, :name controller.entry/delete-story, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 19, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, get-story-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 45, :column 7, :end-line 45, :end-column 22, :arglists (quote ([id]))}, :name controller.entry/get-story-by-id, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 22, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, get-ask-by-page {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 120, :column 7, :end-line 120, :end-column 22, :arglists (quote ([page]))}, :name controller.entry/get-ask-by-page, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 22, :method-params ([page]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 120, :end-line 120, :max-fixed-arity 1, :fn-var true, :arglists (quote ([page]))}, edit-story-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 58, :column 7, :end-line 58, :end-column 23, :arglists (quote ([id]))}, :name controller.entry/edit-story-by-id, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 23, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, delete-job-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 248, :column 7, :end-line 248, :end-column 23, :arglists (quote ([id]))}, :name controller.entry/delete-job-by-id, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 23, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 248, :end-line 248, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, get-ask-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 108, :column 7, :end-line 108, :end-column 20, :arglists (quote ([id]))}, :name controller.entry/get-ask-by-id, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 20, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, add-event-listener-to-ask-button-no {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 364, :column 7, :end-line 364, :end-column 42, :arglists (quote ([]))}, :name controller.entry/add-event-listener-to-ask-button-no, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 42, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 364, :end-line 364, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-stories-by-page {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 34, :column 7, :end-line 34, :end-column 26, :arglists (quote ([page]))}, :name controller.entry/get-stories-by-page, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 26, :method-params ([page]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([page]))}, edit-job-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 206, :column 7, :end-line 206, :end-column 21, :arglists (quote ([id]))}, :name controller.entry/edit-job-by-id, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 21, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 206, :end-line 206, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, add-event-listener-to-add-comment-button {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 293, :column 7, :end-line 293, :end-column 47, :arglists (quote ([entry id]))}, :name controller.entry/add-event-listener-to-add-comment-button, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 47, :method-params ([entry id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 293, :end-line 293, :max-fixed-arity 2, :fn-var true, :arglists (quote ([entry id]))}, add-event-listener-to-edit-job-button {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 369, :column 7, :end-line 369, :end-column 44, :arglists (quote ([id]))}, :name controller.entry/add-event-listener-to-edit-job-button, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 44, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 369, :end-line 369, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, add-event-listener-to-upvote-buttons-for-comments {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 297, :column 7, :end-line 297, :end-column 56, :arglists (quote ([response type]))}, :name controller.entry/add-event-listener-to-upvote-buttons-for-comments, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 56, :method-params ([response type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 297, :end-line 297, :max-fixed-arity 2, :fn-var true, :arglists (quote ([response type]))}, edit-ask {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 142, :column 7, :end-line 142, :end-column 15, :arglists (quote ([id field-ids]))}, :name controller.entry/edit-ask, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 15, :method-params ([id field-ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 142, :end-line 142, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id field-ids]))}, add-event-listener-to-upvote-buttons-for-entries {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 311, :column 7, :end-line 311, :end-column 55, :arglists (quote ([response type]))}, :name controller.entry/add-event-listener-to-upvote-buttons-for-entries, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 55, :method-params ([response type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 311, :end-line 311, :max-fixed-arity 2, :fn-var true, :arglists (quote ([response type]))}, add-event-listener-to-edit-story-button {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 339, :column 7, :end-line 339, :end-column 46, :arglists (quote ([id]))}, :name controller.entry/add-event-listener-to-edit-story-button, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 46, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 339, :end-line 339, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, get-events-by-page {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 271, :column 7, :end-line 271, :end-column 25, :arglists (quote ([page]))}, :name controller.entry/get-events-by-page, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 25, :method-params ([page]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 271, :end-line 271, :max-fixed-arity 1, :fn-var true, :arglists (quote ([page]))}, edit-job {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 217, :column 7, :end-line 217, :end-column 15, :arglists (quote ([id field-ids]))}, :name controller.entry/edit-job, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 15, :method-params ([id field-ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 217, :end-line 217, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id field-ids]))}, add-event-listener-to-delete-job-button-no {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 379, :column 7, :end-line 379, :end-column 49, :arglists (quote ([]))}, :name controller.entry/add-event-listener-to-delete-job-button-no, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 49, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 379, :end-line 379, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-newest-by-page {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 185, :column 7, :end-line 185, :end-column 25, :arglists (quote ([page]))}, :name controller.entry/get-newest-by-page, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :end-column 25, :method-params ([page]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 185, :end-line 185, :max-fixed-arity 1, :fn-var true, :arglists (quote ([page]))}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:ask-upvoted-entries :_id :format :keywords? :else :newest-entry :ask-upvoted-comments :story-upvoted-comments :story-comments :city :response-format :story-upvoted-entries :params :newest-upvoted-entries :title :error-handler :ask-entry :story :url :story-entry :ask-comments :remote? :handler :country :ask :text}, :order [:handler :error-handler :format :response-format :story :keywords? :title :else :params :ask :text :url :country :city :remote? :story-comments :ask-comments :story-upvoted-comments :ask-upvoted-comments :_id :story-entry :ask-entry :story-upvoted-entries :ask-upvoted-entries :newest-entry :newest-upvoted-entries]}, :doc nil}