;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name controller.entry, :imports nil, :requires {error-message cljc.error-messages, validation cljc.validation, goog.dom goog.dom, view.entry.story-entry view.entry.story-entry, ajax.core ajax.core, dom goog.dom, view.entry.ask-entry view.entry.ask-entry, view.entry.event view.entry.event, view.list.newest view.list.newest, reagent.core reagent.core, r reagent.core, cljc.error-messages cljc.error-messages, view.list.job view.list.job, view.entry.job view.entry.job, view.list.event view.list.event, util.controller util.controller, ajax ajax.core, cljc.validation cljc.validation, util.view util.view, view.list.story view.list.story, controller.upvote controller.upvote, controller.comment-entry controller.comment-entry, view.list.ask view.list.ask}, :uses {PUT ajax.core, POST ajax.core, DELETE ajax.core, GET ajax.core}, :defs {add-event-listener-to-ask-button-yes {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 447, :column 7, :end-line 447, :end-column 43, :arglists (quote ([id]))}, :name controller.entry/add-event-listener-to-ask-button-yes, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 43, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 447, :end-line 447, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, edit-story {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 73, :column 7, :end-line 73, :end-column 17, :arglists (quote ([id field-ids]))}, :name controller.entry/edit-story, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 17, :method-params ([id field-ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id field-ids]))}, delete-ask {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 180, :column 7, :end-line 180, :end-column 17, :arglists (quote ([id]))}, :name controller.entry/delete-ask, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 17, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 180, :end-line 180, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, dont-delete-story {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 365, :column 7, :end-line 365, :end-column 24, :arglists (quote ([]))}, :name controller.entry/dont-delete-story, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 365, :end-line 365, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, delete-ask-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 168, :column 7, :end-line 168, :end-column 23, :arglists (quote ([id]))}, :name controller.entry/delete-ask-by-id, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 23, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 168, :end-line 168, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, add-event-listener-to-story-button-yes {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 437, :column 7, :end-line 437, :end-column 45, :arglists (quote ([id]))}, :name controller.entry/add-event-listener-to-story-button-yes, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 45, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 437, :end-line 437, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, dont-delete-ask {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 369, :column 7, :end-line 369, :end-column 22, :arglists (quote ([]))}, :name controller.entry/dont-delete-ask, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 369, :end-line 369, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-event-listener-to-upvote-buttons-for-newest-entries {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 413, :column 7, :end-line 413, :end-column 62, :arglists (quote ([response]))}, :name controller.entry/add-event-listener-to-upvote-buttons-for-newest-entries, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 62, :method-params ([response]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 413, :end-line 413, :max-fixed-arity 1, :fn-var true, :arglists (quote ([response]))}, get-jobs-by-page {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 200, :column 7, :end-line 200, :end-column 23, :arglists (quote ([page]))}, :name controller.entry/get-jobs-by-page, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 23, :method-params ([page]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 200, :end-line 200, :max-fixed-arity 1, :fn-var true, :arglists (quote ([page]))}, edit-event-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 285, :column 7, :end-line 285, :end-column 23, :arglists (quote ([id]))}, :name controller.entry/edit-event-by-id, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 23, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 285, :end-line 285, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, edit-ask-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 135, :column 7, :end-line 135, :end-column 21, :arglists (quote ([id]))}, :name controller.entry/edit-ask-by-id, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 21, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, dont-delete-job {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 373, :column 7, :end-line 373, :end-column 22, :arglists (quote ([]))}, :name controller.entry/dont-delete-job, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 373, :end-line 373, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-event-listener-to-edit-ask-button {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 432, :column 7, :end-line 432, :end-column 44, :arglists (quote ([id]))}, :name controller.entry/add-event-listener-to-edit-ask-button, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 44, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 432, :end-line 432, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, add-event-listener-to-delete-job-button-yes {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 462, :column 7, :end-line 462, :end-column 50, :arglists (quote ([id]))}, :name controller.entry/add-event-listener-to-delete-job-button-yes, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 50, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 462, :end-line 462, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, delete-event {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 356, :column 7, :end-line 356, :end-column 19, :arglists (quote ([id]))}, :name controller.entry/delete-event, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 19, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 356, :end-line 356, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, delete-job {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 265, :column 7, :end-line 265, :end-column 17, :arglists (quote ([id]))}, :name controller.entry/delete-job, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 17, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 265, :end-line 265, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, delete-event-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 342, :column 7, :end-line 342, :end-column 25, :arglists (quote ([id]))}, :name controller.entry/delete-event-by-id, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 25, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 342, :end-line 342, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, dont-delete-event {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 377, :column 7, :end-line 377, :end-column 24, :arglists (quote ([]))}, :name controller.entry/dont-delete-event, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 377, :end-line 377, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, delete-story-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 91, :column 7, :end-line 91, :end-column 25, :arglists (quote ([id]))}, :name controller.entry/delete-story-by-id, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 25, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, add-event-listener-to-story-button-no {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 442, :column 7, :end-line 442, :end-column 44, :arglists (quote ([]))}, :name controller.entry/add-event-listener-to-story-button-no, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 44, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 442, :end-line 442, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, delete-story {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 103, :column 7, :end-line 103, :end-column 19, :arglists (quote ([id]))}, :name controller.entry/delete-story, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 19, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, add-event-listener-to-edit-event-button {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 472, :column 7, :end-line 472, :end-column 46, :arglists (quote ([id]))}, :name controller.entry/add-event-listener-to-edit-event-button, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 46, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 472, :end-line 472, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, get-story-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 49, :column 7, :end-line 49, :end-column 22, :arglists (quote ([id]))}, :name controller.entry/get-story-by-id, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 22, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, get-ask-by-page {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 124, :column 7, :end-line 124, :end-column 22, :arglists (quote ([page]))}, :name controller.entry/get-ask-by-page, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 22, :method-params ([page]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 1, :fn-var true, :arglists (quote ([page]))}, edit-story-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 62, :column 7, :end-line 62, :end-column 23, :arglists (quote ([id]))}, :name controller.entry/edit-story-by-id, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 23, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, delete-job-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 252, :column 7, :end-line 252, :end-column 23, :arglists (quote ([id]))}, :name controller.entry/delete-job-by-id, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 23, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 252, :end-line 252, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, get-ask-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 112, :column 7, :end-line 112, :end-column 20, :arglists (quote ([id]))}, :name controller.entry/get-ask-by-id, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 20, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, add-event-listener-to-ask-button-no {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 452, :column 7, :end-line 452, :end-column 42, :arglists (quote ([]))}, :name controller.entry/add-event-listener-to-ask-button-no, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 42, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 452, :end-line 452, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-stories-by-page {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 38, :column 7, :end-line 38, :end-column 26, :arglists (quote ([page]))}, :name controller.entry/get-stories-by-page, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 26, :method-params ([page]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([page]))}, edit-job-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 210, :column 7, :end-line 210, :end-column 21, :arglists (quote ([id]))}, :name controller.entry/edit-job-by-id, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 21, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 210, :end-line 210, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, add-event-listener-to-delete-event-button-yes {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 477, :column 7, :end-line 477, :end-column 52, :arglists (quote ([id]))}, :name controller.entry/add-event-listener-to-delete-event-button-yes, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 52, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 477, :end-line 477, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, add-event-listener-to-add-comment-button {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 381, :column 7, :end-line 381, :end-column 47, :arglists (quote ([entry id]))}, :name controller.entry/add-event-listener-to-add-comment-button, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 47, :method-params ([entry id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 381, :end-line 381, :max-fixed-arity 2, :fn-var true, :arglists (quote ([entry id]))}, add-event-listener-to-edit-job-button {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 457, :column 7, :end-line 457, :end-column 44, :arglists (quote ([id]))}, :name controller.entry/add-event-listener-to-edit-job-button, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 44, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 457, :end-line 457, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, add-event-listener-to-upvote-buttons-for-comments {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 385, :column 7, :end-line 385, :end-column 56, :arglists (quote ([response type]))}, :name controller.entry/add-event-listener-to-upvote-buttons-for-comments, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 56, :method-params ([response type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 385, :end-line 385, :max-fixed-arity 2, :fn-var true, :arglists (quote ([response type]))}, edit-ask {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 146, :column 7, :end-line 146, :end-column 15, :arglists (quote ([id field-ids]))}, :name controller.entry/edit-ask, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 15, :method-params ([id field-ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id field-ids]))}, add-event-listener-to-upvote-buttons-for-entries {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 399, :column 7, :end-line 399, :end-column 55, :arglists (quote ([response type]))}, :name controller.entry/add-event-listener-to-upvote-buttons-for-entries, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 55, :method-params ([response type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 399, :end-line 399, :max-fixed-arity 2, :fn-var true, :arglists (quote ([response type]))}, add-event-listener-to-edit-story-button {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 427, :column 7, :end-line 427, :end-column 46, :arglists (quote ([id]))}, :name controller.entry/add-event-listener-to-edit-story-button, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 46, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 427, :end-line 427, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, edit-event {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 297, :column 7, :end-line 297, :end-column 17, :arglists (quote ([id field-ids]))}, :name controller.entry/edit-event, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 17, :method-params ([id field-ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 297, :end-line 297, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id field-ids]))}, get-events-by-page {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 275, :column 7, :end-line 275, :end-column 25, :arglists (quote ([page]))}, :name controller.entry/get-events-by-page, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 25, :method-params ([page]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 275, :end-line 275, :max-fixed-arity 1, :fn-var true, :arglists (quote ([page]))}, edit-job {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 221, :column 7, :end-line 221, :end-column 15, :arglists (quote ([id field-ids]))}, :name controller.entry/edit-job, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 15, :method-params ([id field-ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 221, :end-line 221, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id field-ids]))}, add-event-listener-to-delete-event-button-no {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 482, :column 7, :end-line 482, :end-column 51, :arglists (quote ([]))}, :name controller.entry/add-event-listener-to-delete-event-button-no, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 51, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 482, :end-line 482, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-event-listener-to-delete-job-button-no {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 467, :column 7, :end-line 467, :end-column 49, :arglists (quote ([]))}, :name controller.entry/add-event-listener-to-delete-job-button-no, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 49, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 467, :end-line 467, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-newest-by-page {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 189, :column 7, :end-line 189, :end-column 25, :arglists (quote ([page]))}, :name controller.entry/get-newest-by-page, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 25, :method-params ([page]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 189, :end-line 189, :max-fixed-arity 1, :fn-var true, :arglists (quote ([page]))}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:ask-upvoted-entries :_id :format :keywords? :starting-date-year :else :newest-entry :starting-date-day :ask-upvoted-comments :story-upvoted-comments :story-comments :city :response-format :story-upvoted-entries :params :newest-upvoted-entries :starting-date-month :title :error-handler :ask-entry :story :url :story-entry :ask-comments :remote? :handler :country :ask :text}, :order [:handler :error-handler :format :response-format :story :keywords? :title :else :params :ask :text :url :country :city :remote? :starting-date-day :starting-date-month :starting-date-year :story-comments :ask-comments :story-upvoted-comments :ask-upvoted-comments :_id :story-entry :ask-entry :story-upvoted-entries :ask-upvoted-entries :newest-entry :newest-upvoted-entries]}, :doc nil}