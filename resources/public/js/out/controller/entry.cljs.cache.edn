;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name controller.entry, :imports nil, :requires {error-message cljc.error-messages, validation cljc.validation, goog.dom goog.dom, view.entry.story-entry view.entry.story-entry, ajax.core ajax.core, dom goog.dom, view.entry.ask-entry view.entry.ask-entry, view.entry.event view.entry.event, view.list.newest view.list.newest, reagent.core reagent.core, r reagent.core, cljc.error-messages cljc.error-messages, view.list.job view.list.job, view.entry.job view.entry.job, view.list.event view.list.event, util.controller util.controller, ajax ajax.core, cljc.validation cljc.validation, util.view util.view, view.list.story view.list.story, controller.upvote controller.upvote, controller.comment-entry controller.comment-entry, view.list.ask view.list.ask}, :uses {PUT ajax.core, POST ajax.core, DELETE ajax.core, GET ajax.core}, :defs {add-event-listener-to-ask-button-yes {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 458, :column 7, :end-line 458, :end-column 43, :arglists (quote ([id]))}, :name controller.entry/add-event-listener-to-ask-button-yes, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 43, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 458, :end-line 458, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, edit-story {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 76, :column 7, :end-line 76, :end-column 17, :arglists (quote ([id field-ids]))}, :name controller.entry/edit-story, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 17, :method-params ([id field-ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id field-ids]))}, delete-ask {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 188, :column 7, :end-line 188, :end-column 17, :arglists (quote ([id]))}, :name controller.entry/delete-ask, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 17, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 188, :end-line 188, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, dont-delete-story {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 376, :column 7, :end-line 376, :end-column 24, :arglists (quote ([]))}, :name controller.entry/dont-delete-story, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 376, :end-line 376, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, delete-ask-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 175, :column 7, :end-line 175, :end-column 23, :arglists (quote ([id]))}, :name controller.entry/delete-ask-by-id, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 23, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 175, :end-line 175, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, add-event-listener-to-story-button-yes {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 448, :column 7, :end-line 448, :end-column 45, :arglists (quote ([id]))}, :name controller.entry/add-event-listener-to-story-button-yes, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 45, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 448, :end-line 448, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, dont-delete-ask {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 380, :column 7, :end-line 380, :end-column 22, :arglists (quote ([]))}, :name controller.entry/dont-delete-ask, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 380, :end-line 380, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-event-listener-to-upvote-buttons-for-newest-entries {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 424, :column 7, :end-line 424, :end-column 62, :arglists (quote ([response]))}, :name controller.entry/add-event-listener-to-upvote-buttons-for-newest-entries, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 62, :method-params ([response]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 424, :end-line 424, :max-fixed-arity 1, :fn-var true, :arglists (quote ([response]))}, get-jobs-by-page {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 209, :column 7, :end-line 209, :end-column 23, :arglists (quote ([page]))}, :name controller.entry/get-jobs-by-page, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 23, :method-params ([page]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 209, :end-line 209, :max-fixed-arity 1, :fn-var true, :arglists (quote ([page]))}, edit-event-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 298, :column 7, :end-line 298, :end-column 23, :arglists (quote ([id]))}, :name controller.entry/edit-event-by-id, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 23, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 298, :end-line 298, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, edit-ask-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 141, :column 7, :end-line 141, :end-column 21, :arglists (quote ([id]))}, :name controller.entry/edit-ask-by-id, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 21, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, dont-delete-job {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 384, :column 7, :end-line 384, :end-column 22, :arglists (quote ([]))}, :name controller.entry/dont-delete-job, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 384, :end-line 384, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-event-listener-to-edit-ask-button {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 443, :column 7, :end-line 443, :end-column 44, :arglists (quote ([id]))}, :name controller.entry/add-event-listener-to-edit-ask-button, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 44, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 443, :end-line 443, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, add-event-listener-to-delete-job-button-yes {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 473, :column 7, :end-line 473, :end-column 50, :arglists (quote ([id]))}, :name controller.entry/add-event-listener-to-delete-job-button-yes, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 50, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 473, :end-line 473, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, delete-event {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 367, :column 7, :end-line 367, :end-column 19, :arglists (quote ([id]))}, :name controller.entry/delete-event, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 19, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 367, :end-line 367, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, delete-job {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 277, :column 7, :end-line 277, :end-column 17, :arglists (quote ([id]))}, :name controller.entry/delete-job, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 17, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 277, :end-line 277, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, delete-event-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 353, :column 7, :end-line 353, :end-column 25, :arglists (quote ([id]))}, :name controller.entry/delete-event-by-id, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 25, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 353, :end-line 353, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, dont-delete-event {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 388, :column 7, :end-line 388, :end-column 24, :arglists (quote ([]))}, :name controller.entry/dont-delete-event, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 388, :end-line 388, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, delete-story-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 94, :column 7, :end-line 94, :end-column 25, :arglists (quote ([id]))}, :name controller.entry/delete-story-by-id, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 25, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, add-event-listener-to-story-button-no {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 453, :column 7, :end-line 453, :end-column 44, :arglists (quote ([]))}, :name controller.entry/add-event-listener-to-story-button-no, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 44, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 453, :end-line 453, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, delete-story {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 107, :column 7, :end-line 107, :end-column 19, :arglists (quote ([id]))}, :name controller.entry/delete-story, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 19, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, add-event-listener-to-edit-event-button {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 483, :column 7, :end-line 483, :end-column 46, :arglists (quote ([id]))}, :name controller.entry/add-event-listener-to-edit-event-button, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 46, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 483, :end-line 483, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, get-story-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 50, :column 7, :end-line 50, :end-column 22, :arglists (quote ([id]))}, :name controller.entry/get-story-by-id, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 22, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, get-ask-by-page {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 129, :column 7, :end-line 129, :end-column 22, :arglists (quote ([page]))}, :name controller.entry/get-ask-by-page, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 22, :method-params ([page]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 129, :end-line 129, :max-fixed-arity 1, :fn-var true, :arglists (quote ([page]))}, edit-story-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 64, :column 7, :end-line 64, :end-column 23, :arglists (quote ([id]))}, :name controller.entry/edit-story-by-id, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 23, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, delete-job-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 263, :column 7, :end-line 263, :end-column 23, :arglists (quote ([id]))}, :name controller.entry/delete-job-by-id, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 23, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 263, :end-line 263, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, get-ask-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 116, :column 7, :end-line 116, :end-column 20, :arglists (quote ([id]))}, :name controller.entry/get-ask-by-id, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 20, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, add-event-listener-to-ask-button-no {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 463, :column 7, :end-line 463, :end-column 42, :arglists (quote ([]))}, :name controller.entry/add-event-listener-to-ask-button-no, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 42, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 463, :end-line 463, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-stories-by-page {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 38, :column 7, :end-line 38, :end-column 26, :arglists (quote ([page]))}, :name controller.entry/get-stories-by-page, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 26, :method-params ([page]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([page]))}, edit-job-by-id {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 220, :column 7, :end-line 220, :end-column 21, :arglists (quote ([id]))}, :name controller.entry/edit-job-by-id, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 21, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 220, :end-line 220, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, add-event-listener-to-delete-event-button-yes {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 488, :column 7, :end-line 488, :end-column 52, :arglists (quote ([id]))}, :name controller.entry/add-event-listener-to-delete-event-button-yes, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 52, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 488, :end-line 488, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, add-event-listener-to-add-comment-button {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 392, :column 7, :end-line 392, :end-column 47, :arglists (quote ([entry id]))}, :name controller.entry/add-event-listener-to-add-comment-button, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 47, :method-params ([entry id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 392, :end-line 392, :max-fixed-arity 2, :fn-var true, :arglists (quote ([entry id]))}, add-event-listener-to-edit-job-button {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 468, :column 7, :end-line 468, :end-column 44, :arglists (quote ([id]))}, :name controller.entry/add-event-listener-to-edit-job-button, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 44, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 468, :end-line 468, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, add-event-listener-to-upvote-buttons-for-comments {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 396, :column 7, :end-line 396, :end-column 56, :arglists (quote ([response type]))}, :name controller.entry/add-event-listener-to-upvote-buttons-for-comments, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 56, :method-params ([response type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 396, :end-line 396, :max-fixed-arity 2, :fn-var true, :arglists (quote ([response type]))}, edit-ask {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 153, :column 7, :end-line 153, :end-column 15, :arglists (quote ([id field-ids]))}, :name controller.entry/edit-ask, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 15, :method-params ([id field-ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id field-ids]))}, add-event-listener-to-upvote-buttons-for-entries {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 410, :column 7, :end-line 410, :end-column 55, :arglists (quote ([response type]))}, :name controller.entry/add-event-listener-to-upvote-buttons-for-entries, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 55, :method-params ([response type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 410, :end-line 410, :max-fixed-arity 2, :fn-var true, :arglists (quote ([response type]))}, add-event-listener-to-edit-story-button {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 438, :column 7, :end-line 438, :end-column 46, :arglists (quote ([id]))}, :name controller.entry/add-event-listener-to-edit-story-button, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 46, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 438, :end-line 438, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, edit-event {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 310, :column 7, :end-line 310, :end-column 17, :arglists (quote ([id field-ids]))}, :name controller.entry/edit-event, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 17, :method-params ([id field-ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 310, :end-line 310, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id field-ids]))}, get-events-by-page {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 287, :column 7, :end-line 287, :end-column 25, :arglists (quote ([page]))}, :name controller.entry/get-events-by-page, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 25, :method-params ([page]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 287, :end-line 287, :max-fixed-arity 1, :fn-var true, :arglists (quote ([page]))}, edit-job {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 232, :column 7, :end-line 232, :end-column 15, :arglists (quote ([id field-ids]))}, :name controller.entry/edit-job, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 15, :method-params ([id field-ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 232, :end-line 232, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id field-ids]))}, add-event-listener-to-delete-event-button-no {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 493, :column 7, :end-line 493, :end-column 51, :arglists (quote ([]))}, :name controller.entry/add-event-listener-to-delete-event-button-no, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 51, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 493, :end-line 493, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-event-listener-to-delete-job-button-no {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 478, :column 7, :end-line 478, :end-column 49, :arglists (quote ([]))}, :name controller.entry/add-event-listener-to-delete-job-button-no, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 49, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 478, :end-line 478, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-newest-by-page {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/entry.cljs", :line 197, :column 7, :end-line 197, :end-column 25, :arglists (quote ([page]))}, :name controller.entry/get-newest-by-page, :variadic false, :file "src/cljs/controller/entry.cljs", :end-column 25, :method-params ([page]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 197, :end-line 197, :max-fixed-arity 1, :fn-var true, :arglists (quote ([page]))}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:ask-upvoted-entries :_id :format :job-entry :keywords? :starting-date-year :else :newest-entry :starting-date-day :ask-upvoted-comments :story-upvoted-comments :story-comments :city :response-format :story-upvoted-entries :params :newest-upvoted-entries :starting-date-month :title :error-handler :ask-entry :story :url :story-entry :ask-comments :event-entry :remote? :handler :country :ask :text}, :order [:handler :error-handler :format :response-format :story :keywords? :title :story-entry :else :params :ask-entry :ask :text :job-entry :url :country :city :remote? :event-entry :starting-date-day :starting-date-month :starting-date-year :story-comments :ask-comments :story-upvoted-comments :ask-upvoted-comments :_id :story-upvoted-entries :ask-upvoted-entries :newest-entry :newest-upvoted-entries]}, :doc nil}