;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name controller.login, :imports nil, :requires {ajax ajax.core, ajax.core ajax.core, validation cljc.validation, cljc.validation cljc.validation, r reagent.core, reagent.core reagent.core, util.view util.view, util.controller util.controller, view.login view.login}, :uses {PUT ajax.core, POST ajax.core, GET ajax.core}, :defs {log-in {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/login.cljs", :line 23, :column 7, :end-line 23, :end-column 13, :arglists (quote ([field-ids]))}, :name controller.login/log-in, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/login.cljs", :end-column 13, :method-params ([field-ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([field-ids]))}, sign-up {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/login.cljs", :line 52, :column 7, :end-line 52, :end-column 14, :arglists (quote ([field-ids]))}, :name controller.login/sign-up, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/login.cljs", :end-column 14, :method-params ([field-ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([field-ids]))}, handler {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/login.cljs", :line 14, :column 7, :end-line 14, :end-column 14, :arglists (quote ([_]))}, :name controller.login/handler, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/login.cljs", :end-column 14, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_]))}, log-in-page {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/login.cljs", :line 18, :column 7, :end-line 18, :end-column 18, :arglists (quote ([]))}, :name controller.login/log-in-page, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/login.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, log-out {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/login.cljs", :line 44, :column 7, :end-line 44, :end-column 14, :arglists (quote ([]))}, :name controller.login/log-out, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/login.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:format :keywords? :else :password :response-format :username :params :error-handler :handler}, :order [:username :password :else :params :handler :error-handler :format :response-format :keywords?]}, :doc nil}