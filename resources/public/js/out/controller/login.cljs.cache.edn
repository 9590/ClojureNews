;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name controller.login, :imports nil, :requires {ajax ajax.core, ajax.core ajax.core, secretary secretary.core, secretary.core secretary.core, validation cljc.validation, cljc.validation cljc.validation, util.view util.view, r reagent.core, reagent.core reagent.core}, :uses {PUT ajax.core, POST ajax.core, GET ajax.core}, :defs {handler {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/login.cljs", :line 11, :column 7, :end-line 11, :end-column 14, :arglists (quote ([response]))}, :name controller.login/handler, :variadic false, :file "src/cljs/controller/login.cljs", :end-column 14, :method-params ([response]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([response]))}, error-handler {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/login.cljs", :line 15, :column 7, :end-line 15, :end-column 20, :arglists (quote ([{:keys [response]}]))}, :name controller.login/error-handler, :variadic false, :file "src/cljs/controller/login.cljs", :end-column 20, :method-params ([p__25330]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [response]}]))}, sign-up {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/login.cljs", :line 19, :column 7, :end-line 19, :end-column 14, :arglists (quote ([field-ids]))}, :name controller.login/sign-up, :variadic false, :file "src/cljs/controller/login.cljs", :end-column 14, :method-params ([field-ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([field-ids]))}, log-in {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/login.cljs", :line 40, :column 7, :end-line 40, :end-column 13, :arglists (quote ([field-ids]))}, :name controller.login/log-in, :variadic false, :file "src/cljs/controller/login.cljs", :end-column 13, :method-params ([field-ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([field-ids]))}, log-out {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/controller/login.cljs", :line 61, :column 7, :end-line 61, :end-column 14, :arglists (quote ([]))}, :name controller.login/log-out, :variadic false, :file "src/cljs/controller/login.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {secretary secretary.core, secretary.core secretary.core, r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:response :format :keywords? :else :password :response-format :username :params :error-handler :error :handler}, :order [:response :error :username :password :else :params :handler :error-handler :format :response-format :keywords?]}, :doc nil}