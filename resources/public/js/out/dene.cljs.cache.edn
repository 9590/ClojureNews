;; Analyzed by ClojureScript 1.8.51
{:use-macros {defroute secretary.core}, :excludes #{}, :name dene, :imports nil, :requires {events goog.events, goog.events goog.events, dom goog.dom, goog.dom goog.dom, secretary secretary.core, secretary.core secretary.core, r reagent.core, reagent.core reagent.core}, :uses nil, :defs {main-container {:name dene/main-container, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/dene.cljs", :line 8, :column 1, :end-line 8, :end-column 20, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/dene.cljs", :line 8, :column 6, :end-line 8, :end-column 20}}, simple-component {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/dene.cljs", :line 11, :column 7, :end-line 11, :end-column 23, :arglists (quote ([]))}, :name dene/simple-component, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/dene.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, table-ex {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/dene.cljs", :line 18, :column 7, :end-line 18, :end-column 15, :arglists (quote ([]))}, :name dene/table-ex, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/dene.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, empty-ex {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/dene.cljs", :line 36, :column 7, :end-line 36, :end-column 15, :arglists (quote ([]))}, :name dene/empty-ex, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/dene.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, render-simple {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/dene.cljs", :line 39, :column 16, :end-line 39, :end-column 29, :export true, :arglists (quote ([]))}, :name dene/render-simple, :variadic false, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/dene.cljs", :end-column 29, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, combine-routes {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/dene.cljs", :line 43, :column 11, :end-line 43, :end-column 25, :macro true, :arglists (quote ([& routes])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env routes)], :arglists ([&form &env & routes]), :arglists-meta (nil)}}, :name dene/combine-routes, :variadic true, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/dene.cljs", :end-column 25, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(&form &env routes)], :arglists ([&form &env & routes]), :arglists-meta (nil)}, :method-params [(&form &env routes)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 43, :macro true, :end-line 43, :max-fixed-arity 2, :fn-var true, :arglists ([&form &env & routes])}, home-path {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/dene.cljs", :line 48, :column 11, :end-line 48, :end-column 20, :arglists (quote ([& args__22529__auto__])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args__22529__auto__)], :arglists ([& args__22529__auto__]), :arglists-meta (nil)}}, :name dene/home-path, :variadic true, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/dene.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args__22529__auto__)], :arglists ([& args__22529__auto__]), :arglists-meta (nil)}, :method-params [(args__22529__auto__)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 0, :fn-var true, :arglists ([& args__22529__auto__])}, new {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/dene.cljs", :line 51, :column 11, :end-line 51, :end-column 14, :arglists (quote ([& args__22529__auto__])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args__22529__auto__)], :arglists ([& args__22529__auto__]), :arglists-meta (nil)}}, :name dene/new, :variadic true, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/dene.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args__22529__auto__)], :arglists ([& args__22529__auto__]), :arglists-meta (nil)}, :method-params [(args__22529__auto__)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 0, :fn-var true, :arglists ([& args__22529__auto__])}, ertu-path {:protocol-inline nil, :meta {:file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/dene.cljs", :line 54, :column 11, :end-line 54, :end-column 20, :arglists (quote ([& args__22529__auto__])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args__22529__auto__)], :arglists ([& args__22529__auto__]), :arglists-meta (nil)}}, :name dene/ertu-path, :variadic true, :file "/Users/ertugrulcetin/IdeaProjects/clojure-news/src/cljs/dene.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args__22529__auto__)], :arglists ([& args__22529__auto__]), :arglists-meta (nil)}, :method-params [(args__22529__auto__)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 0, :fn-var true, :arglists ([& args__22529__auto__])}}, :require-macros {secretary.core secretary.core, secretary secretary.core, r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:tbody :table :color :button :strong :td :tr :type do :on-click :p.someclass :style :div :id :input :p :span}, :order [:div :p :p.someclass :strong :span :style :color :table :tbody :tr :td :input :type :button :id :on-click do]}, :doc nil}